/*
 * Test
 */
pakiet syntax.test;

zaimportuj jawa.io.StrumieńWydruku;

publiczna klasa SyntaxTest realizuje I {

    całość numer;

    publiczny SyntaxTest() {
        A<C>.InnerClass c;

        A<C> ac = nowy A<>();
        A<B<C>> abc = nowy A<>();

        Łańcuch l = "Test";
        System.wyjście.wydrukovać(l);
    }

    publiczny SyntaxTest(długy d) {
        to();
        całość a, b, c;
        a = (b * (c + d)) % 13;
        to.numer = a;
    }

    prywatny całość cfcc(całość a, całość b) {
        jeśli (a < b) {
            zwróć b - a;
        }
        zwróć a - b;
    }

    void f() {
        znak[] pole = { };
    }

    całość cfvc(całość ...n) {
        całość s = 0;
        dla(całość i = 0; i < n.długość; ++i) {
            s += n[i];
            ++i;
        }
        zwróć s;
    }

    publiczny statyczny <T> całość cfT(T t) {

    }

}

urządzenie I {
    void f();
}

klasa A<T> {

    publiczna klasa InnerClass {

    }

}

klasa B<T przedłuża C> {

}

klasa C przedłuża D {

    publiczny C() {
        nadzbiór();
    }

}

klasa D {

}
